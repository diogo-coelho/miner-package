{"version":3,"names":[],"mappings":"","sources":["scrapers/ScrapContacts.js"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst BrowserLauncher_1 = __importDefault(require(\"../utils/BrowserLauncher\"));\r\nconst ErrorScrapContacts_1 = __importDefault(require(\"./../errors/ErrorScrapContacts\"));\r\nclass ScrapContacts {\r\n    init(companyName, country, website) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                this._companyName = companyName;\r\n                this._country = country;\r\n                this._website = website;\r\n                this._browserLauncher = yield new BrowserLauncher_1.default();\r\n                const context = yield this._browserLauncher.browserPromise.then(browser => browser.createIncognitoBrowserContext());\r\n                this._page = yield context.newPage();\r\n            }\r\n            catch (err) {\r\n                throw new ErrorScrapContacts_1.default(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.default = ScrapContacts;\r\n//# sourceMappingURL=ScrapContacts.js.map"],"file":"ScrapContacts.js"}