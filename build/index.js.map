{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/** Import de erros */\r\nconst ErrorParameters_1 = __importDefault(require(\"./errors/ErrorParameters\"));\r\n/** import de m√≥dulos */\r\nconst FormattedStringCompanyName_1 = __importDefault(require(\"./utils/FormattedStringCompanyName\"));\r\nconst FormattedStringIsoCode_1 = __importDefault(require(\"./utils/FormattedStringIsoCode\"));\r\nconst FormattedStringWebsite_1 = __importDefault(require(\"./utils/FormattedStringWebsite\"));\r\nconst ScrapGeolocation_1 = __importDefault(require(\"./scrapers/ScrapGeolocation\"));\r\nconst ScrapGeolocation_2 = __importDefault(require(\"./scrapers/ScrapGeolocation\"));\r\nclass Miner {\r\n    constructor(obj) {\r\n        this.setParams(obj);\r\n    }\r\n    set companyName(companyName) {\r\n        this._companyName = new FormattedStringCompanyName_1.default(companyName).empresa;\r\n    }\r\n    get companyName() {\r\n        return this._companyName;\r\n    }\r\n    set country(country) {\r\n        this._country = new FormattedStringIsoCode_1.default(country).country;\r\n    }\r\n    getCountry() {\r\n        return this._country;\r\n    }\r\n    set website(website) {\r\n        this._website = new FormattedStringWebsite_1.default(website).website;\r\n    }\r\n    get website() {\r\n        return this._website;\r\n    }\r\n    setParams(obj) {\r\n        if (!obj)\r\n            throw new ErrorParameters_1.default(\"Parameters are empty\");\r\n        if (obj.companyName && obj.country) {\r\n            this._companyName = new FormattedStringCompanyName_1.default(obj.companyName).empresa;\r\n            this._country = new FormattedStringIsoCode_1.default(obj.country).country;\r\n        }\r\n        else if (obj.website) {\r\n            this._website = new FormattedStringWebsite_1.default(obj.website).website;\r\n        }\r\n        else {\r\n            throw new ErrorParameters_1.default(\"Parameters were not passed in a valid way\");\r\n        }\r\n    }\r\n    scrapGeolocation() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._scrapGeolocation = yield new ScrapGeolocation_1.default();\r\n            yield this._scrapGeolocation.init(this._companyName, this._country);\r\n            return this._scrapGeolocation;\r\n        });\r\n    }\r\n    scrapContacts() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._scrapContacts = yield new ScrapGeolocation_2.default();\r\n            yield this._scrapContacts.init(this._companyName, this._country);\r\n            return this._scrapContacts;\r\n        });\r\n    }\r\n    close() {\r\n        return this._scrapGeolocation.closeBrowser();\r\n    }\r\n}\r\nmodule.exports = Miner;\r\n//# sourceMappingURL=index.js.map"],"file":"index.js"}